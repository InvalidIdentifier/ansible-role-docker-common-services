version: "3.9"

name: homelab

services:

### Reverse Proxy ###

  traefik-{{ ansible_nodename }}:
    image: traefik:v2.11
    container_name: traefik-{{ ansible_nodename }}
    hostname: traefik-{{ ansible_nodename }}.${DOMAIN}
    environment:
      - TZ=Europe/Berlin
      - CF_DNS_API_TOKEN=${TRAEFIK_CF_DNS_API_TOKEN}
    command:
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--accesslog.filePath=/etc/traefik/access.log"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.fields.defaultmode=keep"
      - "--accesslog.fields.names.ClientUsername=drop"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--log.filePath=/etc/traefik/traefik.log"
      - "--log.level=DEBUG"
      {% for ep_name, ep_data in traefik_entrypoints.items() %}
      - "--entrypoints.{{ ep_name }}.address=:{{ ep_data.port }}"
      {% if ep_data.trusted_ips is defined %}
      - "--entryPoints.{{ ep_name }}.forwardedHeaders.trustedIPs={{ ep_data.trusted_ips | join(',') }}"
      {% endif %}
      {% if ep_data.extra_config is defined %}
      {% for line in ep_data.extra_config %}
      - "{{ line }}"
      {% endfor %}
      {% endif %}
      {% endfor %}
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.filename=/etc/traefik/dynamic_conf.yml"
      - "--certificatesresolvers.cloudflare.acme.email=${EMAIL_ME}"
      - "--certificatesresolvers.cloudflare.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--serverstransport.insecureskipverify=true"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/etc/localtime:/etc/localtime:ro'
      - '/data/bindmounts/traefik:/etc/traefik/'
    networks:
      web:
        ipv4_address: "172.21.0.104"
    dns:
      - "${DNS_SERVER}"
    ports:
      {% for port in traefik_ports %}
      - "{{ port }}"
      {% endfor %}
    privileged: true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.rule=Host(`traefik-{{ ansible_nodename }}.${DOMAIN}`)
      - traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=traefik-https-redirect
      - traefik.http.routers.traefik-secure.entrypoints=https
      - traefik.http.routers.traefik-secure.rule=Host(`traefik-{{ ansible_nodename }}.${DOMAIN}`)
      - traefik.http.routers.traefik-secure.tls=true
      - traefik.http.routers.traefik-secure.tls.certresolver=cloudflare
      - 'traefik.http.routers.traefik-secure.tls.domains[0].main=${DOMAIN_OLD}'
      - 'traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${DOMAIN_OLD}'
      - 'traefik.http.routers.traefik-secure.tls.domains[1].main=${DOMAIN}'
      - 'traefik.http.routers.traefik-secure.tls.domains[1].sans=*.${DOMAIN}'
      - traefik.http.routers.traefik-secure.service=api@internal
      - providers.file=true
      - providers.file.filename=/etc/traefik/app/dynamic_conf.yml
      - providers.file.watch=true
    extra_hosts:
      - host.docker.internal:172.17.0.1
    restart: unless-stopped

### Monitoring Stack ###

  nodeexporter-{{ ansible_nodename }}:
    image: quay.io/prometheus/node-exporter:latest
    container_name: nodeexporter-{{ ansible_nodename }}
    hostname: nodeexporter-{{ ansible_nodename }}.${DOMAIN}
    volumes:
      - '/:/host:ro,rslave'
      - '/etc/localtime:/etc/localtime:ro'
    dns:
      - "${DNS_SERVER}"
    network_mode: web
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.nodeexporter.entrypoints=nodeexporter
      - "traefik.tcp.routers.nodeexporter.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.nodeexporter.service=nodeexporter"
      - traefik.tcp.services.nodeexporter.loadbalancer.server.port=9100

  cadvisor-{{ ansible_nodename }}:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor-{{ ansible_nodename }}
    hostname: cadvisor-{{ ansible_nodename }}.${DOMAIN}
    dns:
      - "${DNS_SERVER}"
    network_mode: web
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk/:/dev/disk:ro'
      - '/etc/localtime:/etc/localtime:ro'
    devices:
      - /dev/kmsg
    restart: unless-stopped
    privileged: true
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.cadvisor.entrypoints=cadvisor
      - "traefik.tcp.routers.cadvisor.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.cadvisor.service=cadvisor"
      - traefik.tcp.services.cadvisor.loadbalancer.server.port=8080

  promtail-{{ ansible_nodename }}:
    image: grafana/promtail:latest
    container_name: promtail-{{ ansible_nodename }}
    hostname: promtail-{{ ansible_nodename }}.${DOMAIN}
    volumes:
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/data/bindmounts/promtail:/etc/promtail'
      - '/var/log:/var/log'
      - '/etc/localtime:/etc/localtime:ro'
    command: -config.file=/etc/promtail/config.yml
    dns:
      - "${DNS_SERVER}"
    network_mode: web
    restart: unless-stopped

networks:
  web:
    external: true
